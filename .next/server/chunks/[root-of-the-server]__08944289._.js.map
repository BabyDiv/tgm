{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/innastacenko/Desktop/TGM-new/src/app/api/contact/route.js"],"sourcesContent":["// import { NextResponse } from 'next/server';\n// import nodemailer from 'nodemailer';\n\n// export async function POST(req) {\n//   try {\n//     const body = await req.json();\n\n//     const transporter = nodemailer.createTransport({\n//       host: 'mail.ps.kz',\n//       port: 587,  или 587, зависит от хостинга\n//       secure: false,  true для порта 465, false для 587\n//       auth: {\n//         user: process.env.SMTP_USER,\n//         pass: process.env.SMTP_PASS\n//       }\n//     });\n\n//     await transporter.sendMail({\n//       from: `\"${body.firstName} ${body.lastName}\" <${body.email}>`,\n//       to: 'info@cgmexport.kz',\n//       subject: 'Новое сообщение с сайта',\n//       text: `\n//         Имя: ${body.firstName} ${body.lastName}\n//         Email: ${body.email}\n//         Телефон: ${body.phone}\n//         Сообщение: ${body.message}\n//       `\n//     });\n\n//     return NextResponse.json({ success: true, message: 'Email sent' });\n//   } catch (error) {\n//     console.error('Ошибка при отправке письма:', error);\n//     return NextResponse.json({ success: false, message: error.message }, { status: 500 });\n//   }\n// }\n\nimport nodemailer from 'nodemailer';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nasync function testSMTP() {\n  try {\n    const transporter = nodemailer.createTransport({\n      host: 'mail.ps.kz',       // твой SMTP хост\n      port: 587,                // порт SMTP\n      secure: false,            // false для порта 587\n      auth: {\n        user: process.env.SMTP_USER,\n        pass: process.env.SMTP_PASS,\n      },\n    });\n\n    // Проверяем подключение к SMTP серверу\n    await transporter.verify();\n    console.log('SMTP подключение успешно!');\n\n    // Отправляем тестовое письмо себе\n    const info = await transporter.sendMail({\n      from: `\"Тест SMTP\" <${process.env.SMTP_USER}>`,\n      to: process.env.SMTP_USER,\n      subject: 'Тестовое письмо SMTP',\n      text: 'Если это письмо пришло, значит SMTP работает!',\n    });\n\n    console.log('Письмо отправлено:', info.messageId);\n  } catch (error) {\n    console.error('Ошибка SMTP:', error);\n  }\n}\n\ntestSMTP();"],"names":[],"mappings":"AAAA,8CAA8C;AAC9C,uCAAuC;AAEvC,oCAAoC;AACpC,UAAU;AACV,qCAAqC;AAErC,uDAAuD;AACvD,4BAA4B;AAC5B,iDAAiD;AACjD,0DAA0D;AAC1D,gBAAgB;AAChB,uCAAuC;AACvC,sCAAsC;AACtC,UAAU;AACV,UAAU;AAEV,mCAAmC;AACnC,sEAAsE;AACtE,iCAAiC;AACjC,4CAA4C;AAC5C,gBAAgB;AAChB,kDAAkD;AAClD,+BAA+B;AAC/B,iCAAiC;AACjC,qCAAqC;AACrC,UAAU;AACV,UAAU;AAEV,0EAA0E;AAC1E,sBAAsB;AACtB,2DAA2D;AAC3D,6FAA6F;AAC7F,MAAM;AACN,IAAI;;AAEJ;;;;;;;;AAGA,OAAO,MAAM;AAEb,eAAe;IACb,IAAI;QACF,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;YAC7C,MAAM;YACN,MAAM;YACN,QAAQ;YACR,MAAM;gBACJ,MAAM,QAAQ,GAAG,CAAC,SAAS;gBAC3B,MAAM,QAAQ,GAAG,CAAC,SAAS;YAC7B;QACF;QAEA,uCAAuC;QACvC,MAAM,YAAY,MAAM;QACxB,QAAQ,GAAG,CAAC;QAEZ,kCAAkC;QAClC,MAAM,OAAO,MAAM,YAAY,QAAQ,CAAC;YACtC,MAAM,CAAC,aAAa,EAAE,QAAQ,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9C,IAAI,QAAQ,GAAG,CAAC,SAAS;YACzB,SAAS;YACT,MAAM;QACR;QAEA,QAAQ,GAAG,CAAC,sBAAsB,KAAK,SAAS;IAClD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;IAChC;AACF;AAEA","debugId":null}}]
}