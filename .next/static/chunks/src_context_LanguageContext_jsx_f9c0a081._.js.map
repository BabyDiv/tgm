{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/innastacenko/Desktop/TGM-new/src/context/LanguageContext.jsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst LanguageContext = createContext();\n\nexport const LanguageProvider = ({ children }) => {\n  const [locale, setLocale] = useState('en');\n  const [messages, setMessages] = useState({});\n\n  // Загружаем переводы при смене языка\n  useEffect(() => {\n    const storedLocale = localStorage.getItem('locale') || 'en';\n    loadLocale(storedLocale);\n  }, []);\n\n  const loadLocale = async (lng) => {\n    const messages = await import(`../locales/${lng}.json`);\n    setMessages(messages.default);\n    setLocale(lng);\n    localStorage.setItem('locale', lng);\n  };\n\n  const t = (key) => messages[key] || key;\n\n  return (\n    <LanguageContext.Provider value={{ locale, setLocale: loadLocale, t }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n\nexport const useLanguage = () => useContext(LanguageContext);\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAIA,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD;AAE7B,MAAM,mBAAmB,CAAC,EAAE,QAAQ,EAAE;;IAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,CAAC;IAE1C,qCAAqC;IACrC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,MAAM,eAAe,aAAa,OAAO,CAAC,aAAa;YACvD,WAAW;QACb;qCAAG,EAAE;IAEL,MAAM,aAAa,OAAO;QACxB,MAAM,WAAW;;;;;;;;;kBAAa,CAAC,WAAW,EAAE,IAAI,KAAK,CAAC;QACtD,YAAY,SAAS,OAAO;QAC5B,UAAU;QACV,aAAa,OAAO,CAAC,UAAU;IACjC;IAEA,MAAM,IAAI,CAAC,MAAQ,QAAQ,CAAC,IAAI,IAAI;IAEpC,qBACE,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;YAAQ,WAAW;YAAY;QAAE;kBACjE;;;;;;AAGP;GAxBa;KAAA;AA0BN,MAAM,cAAc;;IAAM,OAAA,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AAAe;IAA9C","debugId":null}}]
}